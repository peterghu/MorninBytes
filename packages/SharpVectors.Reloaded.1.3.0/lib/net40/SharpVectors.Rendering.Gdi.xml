<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpVectors.Rendering.Gdi</name>
    </assembly>
    <members>
        <member name="M:SharpVectors.Renderers.Forms.SvgPictureBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SharpVectors.Renderers.Forms.SvgPictureBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SharpVectors.Renderers.Forms.SvgPictureBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="P:SharpVectors.Renderers.Forms.SvgPictureBox.SourceURL">
            <summary>
            Source URL for the Svg Content
            </summary>
        </member>
        <member name="P:SharpVectors.Renderers.Forms.SvgPictureBox.Window">
            <summary>
            Return current SvgWindow used by this control
            </summary>
        </member>
        <member name="M:SharpVectors.Renderers.Forms.SvgPictureBox.CreateEmptySvgDocument">
            <summary>
            Create an empty SvgDocument and GdiRenderer for this control.  The empty SvgDocument is returned.  This method is needed only in situations where the library user needs to create an SVG DOM tree outside of the usual window Src setting mechanism.
            </summary>
        </member>
        <member name="M:SharpVectors.Renderers.Forms.SvgPictureBox.SetupStyleSheets">
            <summary>
            Loads the default user and agent stylesheets into the current SvgDocument
            </summary>
        </member>
        <member name="M:SharpVectors.Renderers.GdiConverter.ToColor(SharpVectors.Dom.Css.ICssColor)">
            <summary>
            A GDI Color representation of the RgbColor
            </summary>
        </member>
        <member name="M:SharpVectors.Renderers.GdiConverter.ToRectangle(SharpVectors.Dom.Svg.SvgRectF)">
            <summary>
            This converts the specified <see cref="T:System.Drawing.RectangleF"/> structure to a 
            <see cref="T:SharpVectors.Dom.Svg.SvgRectF"/> structure.
            </summary>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/> structure to convert.</param>
            <returns>
            The <see cref="T:SharpVectors.Dom.Svg.SvgRectF"/> structure that is converted from the 
            specified <see cref="T:System.Drawing.RectangleF"/> structure.
            </returns>
        </member>
        <member name="T:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer">
            <summary>
            Renders a Svg image to GDI+
            </summary>
        </member>
        <member name="F:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.counter">
            <summary>
            A counter that tracks the next hit color.
            </summary>
        </member>
        <member name="F:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.graphicsNodes">
            <summary>
            Maps a 'hit color' to a graphics node.
            </summary>
            <remarks>
            The 'hit color' is an integer identifier that identifies the
            graphics node that drew it.  When 'hit colors' are drawn onto
            a bitmap (ie. <see cref="F:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.idMapRaster">idMapRaster</see> the 'hit color'
            of each pixel with the help of <see cref="F:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.graphicsNodes">graphicsNodes</see> can identify for a given x, y coordinate the
            relevant graphics node a mouse event should be dispatched to.
            </remarks>
        </member>
        <member name="F:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.rasterImage">
            <summary>
            The bitmap containing the rendered Svg image.
            </summary>
        </member>
        <member name="F:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.invalidatedRasterImage">
            <summary>
            A secondary back-buffer used for invalidation repaints. The invalidRect will
            be bitblt to the rasterImage front buffer
            </summary>
        </member>
        <member name="F:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.idMapRaster">
            <summary>
            A bitmap image that consists of 'hit color' instead of visual
            color.  A 'hit color' is an integer identifier that identifies
            the graphics node that drew it.  A 'hit color' can therefore
            identify the graphics node that corresponds an x-y coordinates.
            </summary>
        </member>
        <member name="F:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.graphics">
            <summary>
            The renderer's <see cref="P:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.GraphicsWrapper">GraphicsWrapper</see>
            object.
            </summary>
        </member>
        <member name="F:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.backColor">
            <summary>
            The renderer's back color.
            </summary>
        </member>
        <member name="F:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.window">
            <summary>
            The renderer's <see cref="T:SharpVectors.Dom.Svg.SvgWindow">SvgWindow</see> object.
            </summary>
        </member>
        <member name="F:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.currentDownX">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.#ctor">
            <summary>
            Initializes a new instance of the GdiRenderer class.
            </summary>
        </member>
        <member name="P:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.RasterImage">
            <summary>
            Gets a bitmap image of the a rendered Svg document.
            </summary>
        </member>
        <member name="P:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.IdMapRaster">
            <summary>
            Gets the image map of the rendered Svg document. This
            is a picture of how the renderer will map the (x,y) positions
            of mouse events to objects. You can display this raster
            to help in debugging of hit testing.
            </summary>
        </member>
        <member name="P:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.Window">
            <summary>
            Gets or sets the <see cref="P:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.Window">Window</see> of the
            renderer.
            </summary>
            <value>
            The <see cref="P:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.Window">Window</see> of the renderer.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.BackColor">
            <summary>
            Gets or sets the back color of the renderer.
            </summary>
            <value>
            The back color of the renderer.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.GraphicsWrapper">
            <summary>
            Gets or sets the <see cref="P:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.GraphicsWrapper">GraphicsWrapper</see>
            object associated with this renderer.
            </summary>
            <value>
            The <see cref="P:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.GraphicsWrapper">GraphicsWrapper</see> object
            associated with this renderer.
            </value>
        </member>
        <member name="P:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.Graphics">
            <summary>
            Gets or sets the <see cref="P:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.Graphics">Graphics</see> object
            associated with this renderer.
            </summary>
            <value>
            The <see cref="P:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.Graphics">Graphics</see> object associated
            with this renderer.
            </value>
        </member>
        <member name="M:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.Render(SharpVectors.Dom.Svg.ISvgElement)">
            <summary>
            Renders the <see cref="T:SharpVectors.Dom.Svg.SvgElement">SvgElement</see>.
            </summary>
            <param name="node">
            The <see cref="T:SharpVectors.Dom.Svg.SvgElement">SvgElement</see> node to be
            rendered
            </param>
            <returns>
            The bitmap on which the rendering was performed.
            </returns>
        </member>
        <member name="M:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.Render(SharpVectors.Dom.Svg.ISvgDocument)">
            <summary>
            Renders the <see cref="T:SharpVectors.Dom.Svg.SvgDocument">SvgDocument</see>.
            </summary>
            <param name="node">
            The <see cref="T:SharpVectors.Dom.Svg.SvgDocument">SvgDocument</see> node to be
            rendered
            </param>
            <returns>
            The bitmap on which the rendering was performed.
            </returns>
        </member>
        <member name="P:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.InvalidRect">
            <summary>
            The invalidated region
            </summary>   
        </member>
        <member name="M:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.OnMouseEvent(System.String,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes mouse events.
            </summary>
            <param name="type">
            A string describing the type of mouse event that occured.
            </param>
            <param name="e">
            The <see cref="T:System.Windows.Forms.MouseEventArgs">MouseEventArgs</see> that contains
            the event data.
            </param>
        </member>
        <member name="M:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.GetNextColor(SharpVectors.Dom.Svg.SvgElement)">
            <summary>
            Allocate a hit color for the specified graphics node.
            </summary>
            <param name="grNode">
            The <see cref="!:GraphicsNode">GraphicsNode</see> object for which to
            allocate a new hit color.
            </param>
            <returns>
            The hit color for the <see cref="!:GraphicsNode">GraphicsNode</see>
            object.
            </returns>
        </member>
        <member name="M:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.GetElementFromColor(System.Drawing.Color)">
            <summary>
            Gets the <see cref="!:GraphicsNode">GraphicsNode</see> object that
            corresponds to the given hit color.
            </summary>
            <param name="color">
            The hit color for which to get the corresponding
            <see cref="!:GraphicsNode">GraphicsNode</see> object.
            </param>
            <remarks>
            Returns <c>null</c> if a corresponding
            <see cref="!:GraphicsNode">GraphicsNode</see> object cannot be
            found for the given hit color.
            </remarks>
            <returns>
            The <see cref="!:GraphicsNode">GraphicsNode</see> object that
            corresponds to the given hit color
            </returns>
        </member>
        <member name="M:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.ColorToId(System.Drawing.Color)">
            <summary>
            TODO: This method is not used.
            </summary>
            <param name="color">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.RendererBeforeRender">
            <summary>
            BeforeRender - Make sure we have a Graphics object to render to.
            If we don't have one, then create one to match the SvgWindow's
            physical dimensions.
            </summary>
        </member>
        <member name="M:SharpVectors.Renderers.Gdi.GdiGraphicsRenderer.RendererAfterRender">
            <summary>
            AfterRender - Dispose of Graphics object created for rendering.
            </summary>
        </member>
        <member name="M:SharpVectors.Renderers.Gdi.GdiRendering.CreateByUri(SharpVectors.Dom.Svg.SvgDocument,System.String,System.String)">
            <summary>
            Generates a new <see cref="!:RenderingNode">RenderingNode</see> that
            corresponds to the given Uri.
            </summary>
            <param name="baseUri">
            The base Uri.
            </param>
            <param name="url">
            The url.
            </param>
            <returns>
            The generated <see cref="!:RenderingNode">RenderingNode</see> that
            corresponds to the given Uri.
            </returns>
        </member>
        <member name="T:SharpVectors.Renderers.Gdi.GdiGraphicsWrapper">
            <summary>
            Wraps a Graphics object since it's sealed
            </summary>
        </member>
        <member name="T:SharpVectors.Renderers.Gdi.GdiGraphicsContainer">
            <summary>
            Wraps a GraphicsContainer because it is sealed.
            This is a helper for GraphicsWrapper so that it can save
            multiple container states. It holds the containers
            for both the idMapGraphics and the main graphics
            being rendered in the GraphicsWrapper.
            </summary>
        </member>
        <member name="T:SharpVectors.Renderers.Gdi.GdiGradientFill">
            <summary>
            Summary description for PaintServer.
            </summary>
        </member>
        <member name="T:SharpVectors.Renderers.Gdi.GdiRootRendering">
            <summary>
            Summary description for SvgElementGraphicsNode.
            </summary>
        </member>
        <member name="T:SharpVectors.Renderers.Gdi.GdiImageRendering">
            <summary>
            Summary description for SvgImageGraphicsNode.
            </summary>
        </member>
        <member name="T:SharpVectors.Renderers.Gdi.GdiRenderingBase">
            <summary>      
            Defines the interface required for a rendering node to interact with the renderer and the SVG DOM
            </summary>
        </member>
    </members>
</doc>
